openapi: 3.0.3
info:
  description: Todo
  license:
    name: MIT
    url: https://opensource.org/license/mit/
  title: Todo
  version: 1.0.0
servers:
- url: "{origin}/api/v1"
  variables:
    origin:
      default: http://localhost:9995
      description: Server Origin
paths:
  /todos:
    get:
      operationId: getTodoList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Todo'
                type: array
          description: OK
        "400":
          description: failed
      summary: Get Todo List
      tags:
      - Todo
    post:
      operationId: createTodo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createTodo_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: OK
        "400":
          description: failed
      summary: Craete Todo
      tags:
      - Todo
  /todos/{todo_id}:
    delete:
      operationId: deleteTodo
      parameters:
      - explode: false
        in: path
        name: todo_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: failed
      summary: Delete Todo
      tags:
      - Todo
    get:
      operationId: getTodo
      parameters:
      - explode: false
        in: path
        name: todo_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: OK
        "400":
          description: failed
      summary: Get Todo
      tags:
      - Todo
    put:
      operationId: updateTodo
      parameters:
      - explode: false
        in: path
        name: todo_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createTodo_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Todo'
                type: array
          description: OK
        "400":
          description: failed
      summary: Update Todo
      tags:
      - Todo
  /users:
    get:
      operationId: getUserList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: OK
        "400":
          description: failed
      summary: Get User List
      tags:
      - User
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          description: failed
      summary: Create User
      tags:
      - User
  /users/{user_id}:
    delete:
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: failed
      summary: Delete User
      tags:
      - User
    get:
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          description: failed
      summary: Get User
      tags:
      - User
    put:
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: OK
        "400":
          description: failed
      summary: Update User
      tags:
      - User
components:
  parameters:
    todo_id:
      explode: false
      in: path
      name: todo_id
      required: true
      schema:
        type: integer
      style: simple
    user_id:
      explode: false
      in: path
      name: user_id
      required: true
      schema:
        type: integer
      style: simple
  schemas:
    Todo:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        due_date: 2000-01-23
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        title: title
        created_by: 6
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        due_date:
          format: date
          type: string
        created_by:
          type: integer
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - id
      - title
      - updated_at
      type: object
    User:
      example:
        role: viewer
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        todos:
          updated_at: 2000-01-23T04:56:07.000+00:00
          due_date: 2000-01-23
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          title: title
          created_by: 6
      properties:
        id:
          type: integer
        name:
          type: string
        role:
          enum:
          - viewer
          - editor
          type: string
        todos:
          $ref: '#/components/schemas/Todo'
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - id
      - name
      - todos
      - updated_at
      type: object
    createTodo_request:
      properties:
        title:
          type: string
        description:
          type: string
        due_date:
          format: date
          type: string
      required:
      - title
      type: object
    createUser_request:
      properties:
        name:
          type: string
      required:
      - name
      type: object
